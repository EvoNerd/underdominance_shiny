library(tidyverse)
shiny::runApp()
runApp()
runApp()
runApp()
#parameters
wAA = 1.2
waa = 1.0
wAa <- 0.8
c(waa, rep(wAa, 2), wAA)
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA))
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness), fill=Genotype) +
geom_bar()
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness)) +
geom_bar()
mpg
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness)) +
geom_bar(stat="identity")
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness), fill=Genotype) +
geom_bar(stat="identity") +
theme_classic()+theme(text = element_text(size=20))
# make a plot of the fitness landscape
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness, fill=Genotype)) +
geom_bar(stat="identity") +
theme_classic()+theme(text = element_text(size=20))
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness, fill=Genotype)) +
geom_bar(stat="identity") +
theme_classic()+theme(text = element_text(size=20),
legend = FALSE)
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness, fill=Genotype)) +
geom_bar(stat="identity") +
theme_classic()+theme(text = element_text(size=20),
legend.position="none")
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness, fill=Genotype)) +
geom_bar(stat="identity") +
scale_fill_manual(values = c("genotype AA" = "firebrick", "genotype Aa" = "orange", "genotype aa" = "gold"))
theme_classic()+theme(text = element_text(size=20),
legend.position="none")
# make a plot of the fitness landscape
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness, fill=Genotype)) +
geom_bar(stat="identity") +
scale_fill_manual(values = c("genotype AA" = "firebrick", "genotype Aa" = "orange", "genotype aa" = "gold")) +
theme_classic()+theme(text = element_text(size=20),
legend.position="none")
data.frame(Genotype = c("aa", "aA", "Aa", "AA"),
Fitness = c(waa, rep(wAa, 2), wAA)) %>%
ggplot(aes(x=Genotype, y=Fitness, fill=Genotype)) +
geom_bar(stat="identity") +
scale_fill_manual(values = c("AA" = "firebrick", "Aa" = "orange", "aA" = "orange", "aa" = "gold")) +
theme_classic()+theme(text = element_text(size=20),
legend.position="none")
runApp()
??wrap_plots
runApp()
p <- seq(0, 1, length.out = 1000)
p0 <- 0.5
gen <- 51
t = seq(0, gen, length.out = 1000)
p_t <- rep(NA, gen)
p_t[1] <- p_0
p_0 <- p0
p_t <- rep(NA, gen)
p_t[1] <- p_0
for(i in 2:gen){
W <- p_t[i-1]^2*wAA + 2*p_t[i-1]*(1-p_t[i-1])*wAa + (1-p_t[i-1])^2*waa
p_t[i] <- (p_t[i-1]^2 * wAA + p_t[i-1] * (1-p_t[i-1]) * wAa) / W
}
data.frame(t = 1:gen, p_t = p_t)
# simulate forward in time for each genotype
temp_df <- data.frame(t = 1:gen, p_t = p_t)
cbind(temp_df, y=(1-temp_df$p_t)^2)
cbind(temp_df, y=(1-temp_df$p_t)^2, Genotype = "genotype aa")
temp_df <- data.frame(t = 1:gen, p_t = p_t)
temp_df <- rbind(cbind(temp_df, y=(1-temp_df$p_t)^2, Genotype = "genotype aa"),
cbind(temp_df, y=2*temp_df$p_t*(1-temp_df$p_t), Genotype = "genotypes aA & Aa"),
cbind(temp_df, y=temp_df$p_t^2, Genotype = "genotype AA"))
temp_df
temp_df <- data.frame(t = 1:gen, p_t = p_t)
temp_df <- rbind(cbind(temp_df, y=(1-temp_df$p_t)^2, Genotype = "genotype aa"),
cbind(temp_df, y=2*temp_df$p_t*(1-temp_df$p_t), Genotype = "genotypes aA & Aa"),
cbind(temp_df, y=temp_df$p_t^2, Genotype = "genotype AA"))
temp_df$Genotype <- factor(temp_df$Genotype,
levels = c("genotype aa", "genotypes aA & Aa", "genotype AA"))
str(temp_df)
selected_plot <-  temp_df %>%
ggplot(aes(x = t-1, y = y)) +
scale_color_manual(values = c("genotype AA" = "firebrick", "genotypes aA & Aa" = "orange", "genotype aa" = "gold")) +
geom_point(size=1) +
labs(x= "Generation",y="Allele frequency, p",
color = "Legend") +
scale_x_continuous(expand = c(0, 0), limits = c(0, input$gen+2)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.01)) +
#        theme(panel.background =
#                element_rect(fill =  rgb(30, 144, 255, 25,
#                                         maxColorValue = 255)),
#              text = element_text(size=16, family= "Times"))
theme_classic()+theme(text = element_text(size=20))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?gc
?reactive
